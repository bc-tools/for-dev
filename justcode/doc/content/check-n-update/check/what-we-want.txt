this::
    date = 2022-10-20


abrev::
    exachges   = ¨exatempl/changes
    templchges = patron path::``changes``


===================
Que souhaite-t-on ?
===================

Considérons un ¨templchges ayant la structure suivante.

dirtree::
    ---
    path = ¨exachges/dirtree.txt
    ---


Le contenu du fichier path::``x-todo-x.txt`` est le suivant.

jinja::
    ---
    path = ¨exachges/x-todo-x.txt
    ---


Imaginons avoir le projet suivant développé sans avoir usé du ¨templchges (les contenus des dossiers path::``src``, path::``tests`` et path::``tools`` ont été omis car il ne nous intéresse pas ici).

dirtree::
    ---
    path = ¨exadir/check-1/myproject-noparams.txt
    ---


On constate que vis à vis du ¨templchges, il manque les fichiers path::``x-todo-x.txt`` et path::``publish/buildlog.py``. Il se trouve que ¨justcode est capable d'indiquer cela comme nous le verrons plus tard (les autres fichiers sont ignorés car non proposés par le ¨templchges).


info::
    La validation d'un projet vis à vis d'un patron s'obtient en lançant ¨justcode avec l'option terminal::``--check``, et pour argument le chemin du dossier path::``myproject_2``.


L'analyse ne se réduit pas juste aux structures des dossiers, le contenu des fichiers peut être analysé suivant certains critères qu'aura fourni le concepteur du patron. Considérons le projet ci-après qui respecte la structure du ¨templchges.

dirtree::
    ---
    path = ¨exadir/check-2/myproject-noparams.txt
    ---


Supposons que le contenu du fichier path::``x-todo-x.txt`` soit ici le suivant.

verb::
    ---
    path = ¨exadir/check-2/x-todo-x.txt
    ---


Comme nous allons l'expliquer dans la section suivante, le concepteur du ¨templchges peut faire en sorte que ¨justcode note les manquements suivants vis à vis du fichier path::``x-todo-x.txt`` donné plus haut.

    1) L'absence des ``===`` autour de ``myproject_2`` au début du fichier.

    1) L'absence de la ligne ``VERSION = MAJOR.MINOR.PATCH``.


Il est aussi possible de souhaiter ¨tjrs avoir le même fichier path::``publish/buildlog.py``. Ce type de fichier peut être un outil maison qui n'a pas vocation a être modifié.


info::
    L'analyse est personnalisable à tout moment pour répondre au mieux aux exigences de chacun.
