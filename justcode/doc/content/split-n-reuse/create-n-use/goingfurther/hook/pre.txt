this::
    date = 2022-10-18


===================================
De l'utilité des pré-traitements...
===================================

Imaginions qu'un patron souhaite indiquer automatiquement l'¨os_fr utilisé lors de l'initilisation d'un projet.
Nous allons supposer que la ¨var ¨jinjang pour cette ¨info se nomme jinjang::``osname``.
Pour arriver à nos fins, il suffit de passer via le code suivant placé dans le dossier path::``pre`` (on a laissé un mini test de vérification).

python::
    ---
    path = ¨exahook/pre_osname.py
    ---


Le code ci-dessus s'appuie sur deux ingrédients importants.

    1) La classe python::``Params`` contient tous les paramètres qui seront disponibles lors de l'utilisation d'un ou plusieurs squelettes. L'emploi de python::``TAG_MAIN``, qui vaut juste python::``"main"``, permet d'éviter de tragiques fautes de frappe.

    1) La méthode statique python::``Type.str`` n'est pas indispensable ici, mais c'est une bonne pratique car on demande à ¨justcode de valider la valeur indiquée, et de la transformer éventuellement pour produire automatiquement d'autres ¨params.
    On peut ainsi utiliser python::``Type.lic`` pour une valeur de type ¨lic, et là cela devient très utile.


tip::
    La classe python::``Params`` s'utilise comme un ¨dict. Ses clés correspondent aux contextes d'utilisation. Ici nous utilisons juste le contexte global via python::``TAG_MAIN``.
    Pour utiliser, par exemple, le contexte d'un dossier path::``changes`` initié via un sous-patron, il suffira de passer via python::``Params["changes"]``.
