this::
    date = 2017-01-04


=====================================
Réglage par défaut et blocs interdits
=====================================

Dans tous les exemples précédents nous avons utiliser les classes ``data.Read`` et ``data.ReadBlock`` un raccourci pour définir un unique mode pour tous les blocs. En fait lorsque l'on écrit ``mode = "verbatim"``, on indique en coulisse d'utiliser ``mode = {"verbatim": ':default:'}`` à savoir que le mode par défaut est ``"verbatim"``.


Par contre, si l'on n'utilise pas le mot clé ``:default:`` dans la définition des types de données via l'argument ``mode`` des classe ``data.Read`` et ``data.ReadBlock``, alors seuls les noms de bloc appraissant dans ``mode`` seront autorisés. Voici un exemple pour clarifier les choses.

python::
    from orpyste.data import Read

    content = """
    createur::
        age   = 24
        sexe  = féminin
        score = 2007
        alias = Sonic

    hero::
        age   = 18
        sexe  = masculin
        score = 1874
        alias = Super Mario
    """.strip()

    with Read(
        content = content,
        mode    = {"keyval:: =": 'createur'}
    ) as datas:
        for onedata in datas:
            if onedata.isblock():
                print('--- {0} ---'.format(onedata.querypath))

            elif onedata.isdata():
                print(onedata.rtu)


Lancé dans un terminal, le code précédent nous lève une exception (la sortie console a été tronquée) ce qui est normal car ``mode = {"keyval:: =": 'createur'}`` définit juste le mode du bloc ``createur`` et aucun mode par défaut.

term::
    [...]
    orpyste.parse.ast.ASTError: last block << hero >> is illegal, see line nb.7
