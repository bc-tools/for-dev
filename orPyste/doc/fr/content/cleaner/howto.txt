this::
    date = 2017-08-01


======================================
Comment standardiser vos données ¨peuf
======================================

Considérons l'affreux code ¨peuf ci-dessous que l'on suppose de nouveau être stocké dans un fichier de chemin complet path::``user/example.peuf`` avec l'encodage l'``utf-8``.

orpyste::


    /*
           Un exemple de commentaire disgrâcieux...
       */


    // Un autre commentaire juste avant la toute première section.


    ==
    Une section mal tapée...
    ===========

    bloc_principal::

    // Commentaire dans le 1er bloc conteneur.


        test::




    /* Un commentaire dans un bloc clé-valeur. */


            aaa= 1    + 9 = 10


            bbbbbbbbb <> 2
            c                 = 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and
    /* Un commentaire dans la valeur d'une clé. */
            3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and...


        verb::
            Ligne courte

                Ligne       longue       longue       longue       longue       longue       longue       longue       longue       longue


            ////


Le formatage de ce code se fait très simplement via le code suivant où ¨orpyste laisse la responsabilité de la modification du fichier ou de la chaîne de caractères au programmeur via ``for line in infos.view``.

python::
    from pathlib import Path
    from orpyste.clean import Clean

    with Clean(
        content = Path("user/example.peuf"),
        mode    = {
            "container"    : ":default:",
            "keyval:: = <>": "test",
            "verbatim"     : "verb"
        }
    ) as infos:
        hrule = '-'*10

        print(
            hrule,
            "\n".join(line for line in infos.view),
            hrule,
            sep = "\n"
        )


En relisant si besoin l'avertissement sur les espaces donné au tout début de cf::``./reader/keyval.txt``, on devine que le code ci-dessus affichera ce qui suit une fois lancé dans un terminal.

term::
    ----------
    /*
           Un exemple de commentaire disgrâcieux...
       */
    // Un autre commentaire juste avant la toute première section.
    ========================
    Une section mal tapée...
    ========================

    bloc_principal::
    // Commentaire dans le 1er bloc conteneur.
        test::
    /* Un commentaire dans un bloc clé-valeur. */
            aaa = 1    + 9 = 10
            bbbbbbbbb <> 2
    /* Un commentaire dans la valeur d'une clé. */
            c = 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and 3 and...

        verb::
            Ligne courte

                Ligne       longue       longue       longue       longue       longue       longue       longue       longue       longue


            ////

    ----------


La section qui suit montre quelques autres possibilités offertes par la classe ``clean.Clean``.
