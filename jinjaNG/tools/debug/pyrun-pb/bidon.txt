I have the following folder organization. The file `test-run-1.py`
I would lik to use runpy.run_path from outside
~~~
pyrun-pb
├── folder-1
│   ├── common.py
│   ├── data.py
│   └── test-run-1.py
└── test-run-2.py
~~~

~~~python
# test-run2.py

from pathlib import Path
from runpy   import run_path

THIS_DIR = Path(__file__).parent

data = run_path((THIS_DIR / 'folder-1') / 'data.py')

print(data["XTRA"])
~~~

~~~python
# test-run1.py

from pathlib import Path
from runpy   import run_path

THIS_DIR = Path(__file__).parent

data = run_path(THIS_DIR / 'data.py')

print(data["XTRA"])
~~~

~~~python
# data.py

from common import CVAR

XTRA = {
    'test': CVAR,
}
~~~

~~~python
# common.py

CVAR = "example"
~~~


~~~
> python /path/to/pyrun-pb/folder-1/test-run-1.py
{'test': 'example'}
> python /path/to/pyrun-pb/test-run-2.py
Traceback (most recent call last):
  File "/path/to/pyrun-pb/test-run-2.py", line 8, in <module>
    data = run_path((THIS_DIR / 'folder-1') / 'data.py')
  File "//path/to/python3.9/runpy.py", line 288, in run_path
    return _run_module_code(code, init_globals, run_name,
  File "//path/to/python3.9/runpy.py", line 97, in _run_module_code
    _run_code(code, mod_globals, init_globals,
  File "//path/to/python3.9/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/path/to/pyrun-pb/folder-1/data.py", line 3, in <module>
    from common import CVAR
ModuleNotFoundError: No module named 'common'
~~~
