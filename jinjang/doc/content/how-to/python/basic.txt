this::
    date = 2022-12-18


=============
Usage de base
=============

Considérons le code suivant qui produit un fichier path::``output.txt`` en peuplant le fichier path::``mytemplate.txt`` avec les données fournies via le dictionnaire python::``MY_DATAS``
((
    Nous supposons ici que la commande term::``cd`` a été employée avant d'appeler notre fichier ¨python, ceci afin de se placer dans le dossier contenant le script ¨python, et aussi le "patron".
    Normalement, c'est au code ¨python de gérer cela, mais nous n'avons pas voulu alourdir l'exemple proposé.
)).
Des explications sont données juste après.

python::
    ---
    path    = ?/examples/via-python/mypybuilder.py
    replace = "tmpl-test-in.txt"
              >>>
              "mytemplate.txt"
    ---


Le code s'appuie sur une instance de la classe python::``JNGBuilder`` du package python::``jinjang``, celle-ci s'utilisant comme suit.

    1) L'initialisation indique un "dialecte", soit ici la "saveur" ¨ascii
    ((
        L'emploi de la constante python::``FLAVOUR_ASCII``, fournie par ¨jinjang, évite des fautes de frappe ravageuses.
    )).
    Ceci est la valeur par défaut, on peut donc se passer de python::``flavour = FLAVOUR_ASCII``, sauf si l'on souhaite imposer la "saveur" ¨ascii.

    1) L'initialisation demande de donner le fichier "patron", ceci est fait via python::``template = TMPL_FILE`` où python::``TMPL_FILE`` est obligatoirement de type python::``pathlib.Path`` (la bibliothèque python::``pathlib`` est déjà importée par ¨jinjang).

    1) La contsruction du fichier "produit" se fait via la méthode python::``build`` qui possède deux arguments non optionnels, et bien nommés, python::``datas`` et python::``output``.


info::
    A tout moment on peut changer de "dialecte", ou de fichier "patron" en modifiant les valeurs des attributs python::``flavour`` et python::``template`` proposés par la classe python::``JNGBuilder``.
    Cette méthode de moficiation d'attributs est sûre car elle passe par des "getters" en coulisse.
