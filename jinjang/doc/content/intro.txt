this::
    date = 2022-10-20


=======================================
¨jinja c'est bien, ¨jinjang c'est mieux
=======================================

L'ambition de ¨jinjang est de rendre le travail avec ¨jinja bien plus efficace. Donnons juste un exemple dans le cadre de projets écrits via ¨latex avant d'explorer les détails dans les sections suivantes.

    1) Ce qui ne va pas avec ¨jinja est que l'on pollue très vite les contenus des patrons
    ((
        En anglais, on parle de "templates". Nous utiliserons "patron" comme raccourci de "patron de conception".
    )).
    Ceci peut rendre très pénible la conception de tels patrons, même en ¨html qui est le langage ciblé initialement par ¨jinja.

    1) Les commandes propres au langage de conception de ¨jinja sont indiquées via des commentaires spécifiques au langage de programmation de chaque fichier "patron". Par exemple, ceci rend possible la compilation d'un patron path::``TEX``, ou encore le test en situation réelle d'un fichier ¨python "patron".

    1) ¨jinjang propose pour ¨latex un package éponyme fournissant la macro latex::``\JNGVAR`` à un argument afin de pouvoir compiler son patron path::``TEX`` tout en rendant visible dans le PDF les noms des variables destinées à être remplacées par ¨jinja.
    Pour la langage ¨python, on dispose d'une bibliothèque avec une fonction python::``JNGVAR``.

    1) Il est très simple de fabriquer un fichier final à partir d'un fichier "patron" et de données, ou bien d'un script ¨python fabriquant ces données.


info::
    Le nom ¨jinjang, en plus de sonner japonais, au moins pour un français, est pour "JINJA N-ext G-eneration", soit "la génération suivant(e de) ¨jinja" en anglais. Ceci a une double signification.

        1) La génération suivant ¨jinja : ceci indique que l'on s'en remet pleinement à ¨jinja pour concevoir des produits finis à partir de patrons.

        1) La génération suivante de ¨jinja : ceci indique que l'on améliore les fonctionnalités proposées par ¨jinja.
