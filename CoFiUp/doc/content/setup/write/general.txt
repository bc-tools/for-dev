this::
    date = 2023-01-23


================
Principe général
================

Pour indiquer où chercher du contenu à capturer, on utilise le bloc yaml::``search`` qui donne les règles de ¨rech. Ce dernier admet la ¨struc suivante (un exemple concret est fourni dans la section suivante). Indiquons que yaml::``"..."`` symbolise le fait que le nombre de règles n'est pas limité.

yaml::
    search:
        - <NOM-RÈGLE>:
            - '<REGEX-CHEMIN>'
            - '<REGEX-CONTENU>'

        - "..."


Pour nommer les règles, il faut faire en sorte que yaml::``<NOM-RÈGLE>`` soit un nom "textuel" valide pour un bloc ¨yaml.
Vient ensuite une liste, de ¨long `2` obligatoirement, contenant une règle pour indiquer les fichiers à analyser, suivie d'une autre pour explorer le contenu des fichiers retenus. Ces règles sont à taper sous forme de ¨regexs_FR, et entre des guillemets simples afin d'utiliser une chaîne de caractères "brutes", ou verbatim, du point de vue de ¨yaml.


info::
    Voici deux sites utiles pour travailler avec des ¨regexs_FR ¨python.

        1) ¨debuggex permet de visualiser le fonctionnement d'une ¨regex_FR de son choix.

        1) ¨regexkit opte pour une autre approche en expliquant, en anglais, ce qu'est la ¨regex_FR qui lui est fourni.
